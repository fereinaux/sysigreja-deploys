@model SysIgreja.ViewModels.SelectViewModel

<select class="form-control @(Model.Class) select-config" id="@(Model.Id)" onchange="changeConfig_@(Model.OnChange)()">
</select>

<script>
    function handleGlobals() {
        if (SelectedConfig) {
            localStorage.setItem('configId', SelectedConfig.Id)
            $('title').text($('#title').text())
            $('.title-circulo').text(SelectedConfig.EquipeCirculo)
            $('link[rel="icon"]').attr('href', `/Arquivo/GetArquivo/${Login.LogoId}`)
            $('#home-button-logo img').attr('src', `/Arquivo/GetArquivo/${Login.LogoId}`)
            $('#home-button-logo').css('display', 'block')
            $('#img-logo').attr('src', `/Arquivo/GetArquivo/${Login.LogoId}`)

            $('.bg-coord').css('background-color', SelectedConfig.CorBotao)

            $('body').on('DOMNodeInserted', '.swal-title', function () {
                $('.swal-modal').css('background', SelectedConfig.CorBotao)
                $('.swal-modal').css('color', 'white')
                $('.swal-title').css('color', 'white')


                $('.swal-modal').css('background', SelectedConfig.CorBotao)
                $('.swal-modal').css('color', 'white')
            });
            $('body').on('DOMNodeInserted', '.swal-content', function () {
                $('.swal-content').css('color', 'white')
                $('.swal-content__input').css('background', SelectedConfig.CorBotao)

            });

            $('body').on('DOMNodeInserted', '.swal-text', function () {
                $('.swal-text').css('color', 'white')

            });

            $('.btn.btn-flat').css('background', SelectedConfig.CorBotao)
            $('.btn.btn-flat').css('margin-left', '7px')
        }
    }

    function changeConfig_@(Model.OnChange)() {
        getClaims().then(claims => {
            SelectedConfig = claims.Configuracoes.find(config => config.Id == $(`#@(Model.Id)`).val())
            handleGlobals()
            if (typeof @(Model.OnChange) != 'undefined') {
                @(Model.OnChange)()
            }
        })
    }

    getClaims().then(claims => {
        roles = '@Model.Roles'.replaceAll(' ', '').split(',')
        if (roles.length == 1 && roles[0] == "Coordenador") {
            eventos = claims.Eventos.filter(evento => evento.Coordenador == true)
        } else {
            eventos = claims.Eventos.filter(evento => roles.includes(evento.Role))
        }

        if (claims.Configuracoes.length > 0) {
            claims.Configuracoes.forEach(function (config) {
                $(`#@(Model.Id)`).append($(`<option ${localStorage.getItem('configId') == config.Id ? 'selected' : ''} data-casal="${config.TipoEvento == 'Casais'}" value="${config.Id}"">${config.Titulo}</option>`));
            });


            if (claims.Configuracoes.length == 1 || !claims.Configuracoes.map(config => config.Id).includes(SelectedConfig.Id)) {
                SelectedConfig = claims.Configuracoes[0]
                localStorage.setItem('configId', SelectedConfig.Id)
            }

            $("#@(Model.Id)").select2(
            {
              dropdownParent: "@(Model.DropdownParent)" ? $("#@(Model.DropdownParent)") : null
            })

            handleGlobals()
            if (($('.select-config')[0].id == '@(Model.Id)') && AajaxLoading) {
                $(document).trigger('ready-ajax');
            }

        } else {
            window.location.href = '/Account/NaoAutorizado'
        }
    })

</script>

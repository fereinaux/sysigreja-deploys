<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>@ViewBag.Title</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="/Home/Index">Home</a>
            </li>
            <li class="breadcrumb-item">
                <a href="#">Configurações</a>
            </li>
            <li class="breadcrumb-item active">
                <strong>@ViewBag.Title</strong>
            </li>
        </ol>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="ibox">
        <div class="ibox-title" style="display: flex;justify-content: space-between;">
            <h4>@ViewBag.Title</h4>
            <div class="ibox-tools pull-right">
                <button class="btn btn-default" id="btn_Adicionar" onclick="EditConfiguracao(0)">Adicionar</button>
            </div>
        </div>
        <div class="ibox-content">
            <table id="table-configuracao" class="table table-striped table-bordered table-hover" />
        </div>
    </div>
</div>

<div class="modal inmodal" id="modal-configuracao" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content animated bounceInRight">
            <div class="modal-header">
                <h5 class="modal-title">Informações</h5>
            </div>
            <div class="modal-body">
                <div class="moldura-modal p-h-xs" id="form-configuracao">
                    <div class="row p-h-xs">
                        <input type="hidden" id="configuracao-id" />
                        <div class="col-sm-6 p-w-md text-center">
                            <h5>Título</h5>

                            <input type="text" class="form-control required" id="configuracao-titulo" data-field="Configuracao" />
                        </div>
                        <div class="col-sm-6 p-w-md text-center">
                            <h5>Indentificador</h5>

                            <input type="text" class="form-control required text-lowercase" id="configuracao-identificador" data-field="Identificador" />
                        </div>
                        <div class="col-sm-6 p-w-md text-center">
                            <h5>Cor do Evento</h5>

                            <input type="color" style="padding:0" class="form-control required" id="configuracao-corbotao" name="color" pattern="^#+([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$" value="#bada55" data-field="Cor do Evento">
                        </div>



                        <div class="col-sm-6 p-w-md text-center">
                            <h5>Centro de Custo para Inscrições</h5>
                            <select class="form-control centro-custos" id="configuracao-centrocustoinscricao" style="width: 100%" data-field="Centro de Custo para Inscrições">
                            </select>
                        </div>
                        <div class="col-sm-6 p-w-md text-center">
                            <h5>Centro de Custo para Taxa de Voluntário</h5>
                            <select class="form-control centro-custos" id="configuracao-centrocustoequipe" style="width: 100%" data-field="Centro de Custo para Taxa de Voluntário">
                            </select>
                        </div>

                        <div class="col-sm-6 p-w-md text-center">
                            <h5>Tipo dos Quartos</h5>

                            <select class="form-control" id="configuracao-tipoquarto" style="width: 100%" data-field="Tipo dos Quartos">
                                <option value="0">Normal</option>
                                <option value="1">Endereço</option>
                            </select>
                        </div>
                        <div class="col-sm-6 p-w-md text-center">
                            <h5>Tipo do Evento</h5>

                            <select class="form-control" id="configuracao-tipoevento" style="width: 100%" data-field="Tipo do Evento">
                                <option value="0">Individual</option>
                                <option value="1">Casais</option>
                            </select>
                        </div>


                        <div class="col-sm-6 p-w-md text-center">
                            <h5>Divisão dos Grupos</h5>

                            <select class="form-control" id="configuracao-tipocirculo" style="width: 100%" data-field="Divisão Grupos">
                                <option value="0">Endereço</option>
                                <option value="1">Aleatório</option>
                                <option value="2">Idade</option>
                            </select>
                        </div>

                        <div class="col-sm-12 p-w-md text-center">
                            <h5>Congregações participantes</h5>

                            <select class="form-control configuracao-igrejas required" id="configuracao-igreja" multiple="multiple" style="width: 100%" data-field="Congregações Participantes">
                            </select>
                        </div>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-white pull-right m-l-sm" data-dismiss="modal">Fechar</button>
                    <button type="button" class="btn btn-white pull-right" onclick="PostConfiguracao()">Salvar</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal inmodal" id="modal-campos" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content animated bounceInRight">
            <div class="modal-header">
                <h5 class="modal-title">Campos</h5>
            </div>
            <div class="modal-body">
                <div class="moldura-modal p-h-xs" id="form-campos">
                    <div class="row p-h-xs">
                        <div class="col-sm-12 p-w-md text-center">
                            <h5>Campos de inscrição dos Participantes</h5>

                            <select class="form-control configuracao-campos required" id="configuracao-campos" multiple="multiple" style="width: 100%" data-field="Campos de inscrição dos Participantes">
                            </select>
                        </div>
                        <div class="col-sm-12 p-w-md text-center">
                            <h5>Campos de inscrição dos Voluntários</h5>

                            <select class="form-control configuracao-campos required" id="configuracao-camposequipe" multiple="multiple" style="width: 100%" data-field="Campos de inscrição dos Voluntários">
                            </select>
                        </div>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-white pull-right m-l-sm" data-dismiss="modal">Fechar</button>
                    <button type="button" class="btn btn-white pull-right" onclick="PostCampos()">Salvar</button>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="modal inmodal" id="modal-mensagens" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content animated bounceInRight">
            <div class="modal-header">
                <h5 class="modal-title">Mensagens</h5>
            </div>
            <div class="modal-body">
                <div class="moldura-modal p-h-xs" id="form-mensagens">
                    <div class="row p-h-xs">
                        <div class="col-sm-12 p-w-md text-center">
                            <h5>Mensagem Conclusão</h5>

                            <textarea class="configuracao-msg" id="configuracao-msg" name="editordata"></textarea>
                        </div>
                        <div class="col-sm-12 p-w-md text-center">
                            <h5>Mensagem Conclusão para a Equipe</h5>

                            <textarea class="configuracao-msgequipe" id="configuracao-msgequipe" name="editordata"></textarea>
                        </div>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-white pull-right m-l-sm" data-dismiss="modal">Fechar</button>
                    <button type="button" class="btn btn-white pull-right" onclick="PostMensagens()">Salvar</button>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="modal inmodal" id="modal-equipes" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content animated bounceInRight">
            <div class="modal-header">
                <h5 class="modal-title">Equipes</h5>
            </div>
            <div class="modal-body">
                <div class="moldura-modal p-h-xs" id="form-equipes">
                    <div class="row p-h-xs">
                        <div class="col-sm-12 p-w-md text-center">
                            <h5>Equipes de trabalho</h5>

                            <select class="form-control configuracao-equipes required" id="configuracao-equipes" multiple="multiple" style="width: 100%" data-field="Equipes de trabalho">
                            </select>
                        </div>

                        <div class="col-sm-12 p-w-md text-center">
                            <h5>Equipes do formulário de inscrição</h5>

                            <select class="form-control configuracao-equipes" id="configuracao-equipes-inscricao" multiple="multiple" style="width: 100%" data-field="Equipes do formulário de inscrição">
                            </select>
                        </div>

                        <div class="col-sm-6 p-w-md text-center">
                            <h5>Equipe de Grupos</h5>

                            <select class="form-control configuracao-equipes" id="configuracao-equipecirculo" style="width: 100%" data-field="Equipe Grupos">
                            </select>
                        </div>


                        <div class="col-sm-6 p-w-md text-center">
                            <h5>Equipe de Caronas</h5>

                            <select class="form-control configuracao-equipes" id="configuracao-equipecarona" style="width: 100%" data-field="Equipe Carona">
                            </select>
                        </div>

                        <div class="col-sm-12 p-w-md text-center">
                            <div class="checkbox i-checks-green" style="margin-left:20px;text-align:left">
                                <label style="display:block"> <input id="configuracao-vincular" type="checkbox"> Vincular Montagem a Inscrição de Voluntário? <i></i></label>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-white pull-right m-l-sm" data-dismiss="modal">Fechar</button>
                    <button type="button" class="btn btn-white pull-right" onclick="PostEquipes()">Salvar</button>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="modal inmodal" id="modal-integracao" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content animated bounceInRight">
            <div class="modal-header">
                <h5 class="modal-title">Integrações</h5>
            </div>
            <div class="modal-body">
                <div class="moldura-modal p-h-xs" id="form-integracao">
                    <div class="row p-h-xs">
                        <div class="col-sm-12 col-md-6  p-w-md text-center">
                            <h5>Public Key Mercado Pago</h5>

                            <input type="text" class="form-control " id="configuracao-public" data-field="Public Key Mercado Pago" />
                        </div>

                        <div class="col-sm-12 col-md-6  p-w-md text-center">
                            <h5>Access Token Mercado Pago</h5>

                            <input type="text" class="form-control " id="configuracao-access" data-field="Access Token Mercado Pago" />
                        </div>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-white pull-right m-l-sm" data-dismiss="modal">Fechar</button>
                    <button type="button" class="btn btn-white pull-right" onclick="PostIntegracao()">Salvar</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal inmodal" id="modal-midia" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content animated bounceInRight">
            <div class="modal-header">
                <h5 class="modal-title">Mídias</h5>
            </div>
            <div class="modal-body">
                <div class="moldura-modal p-h-xs" id="form-midia">
                    <div class="row p-h-xs">
                        <div class="col-sm-12  p-w-md m-t-md">
                            <div style="width: 100%;background: #cacacbe0;border-radius: 12px;padding: 10px;">
                                <div class="row">
                                    <div class="col-sm-12 col-md-12 text-center">
                                        <h5>Logo</h5>
                                        <img id="img-logo" style="width:20%;margin:auto" src="" class="m-auto" />
                                        <form enctype="multipart/form-data" id="frm-logo" method="post" novalidate="novalidate">
                                            <label for="logo" class="inputFile">
                                                <span id="add-logo" class="btn btn-default inputFile m-md" style="width: 100%;" aria-hidden="true"><i class="fas fa-upload m-xs"></i> Escolher Arquivo</span>
                                                <input accept="image/*" onchange='Logo()' style="display: none;" class="custom-file-input inputFile" id="logo" name="logo" type="file" value="">
                                            </label>
                                        </form>
                                    </div>

                                    <div class="col-sm-12 col-md-12 text-center">
                                        <h5>Logo Relatórios</h5>
                                        <img id="img-logorelatorio" style="width:20%;margin:auto" src="" class="m-auto" />
                                        <form enctype="multipart/form-data" id="frm-logorelatorio" method="post" novalidate="novalidate">
                                            <label for="logorelatorio" class="inputFile">
                                                <span id="add-logorelatorio" class="btn btn-default inputFile m-md" style="width: 100%;" aria-hidden="true"><i class="fas fa-upload m-xs"></i> Escolher Arquivo</span>
                                                <input accept="image/*" onchange='LogoRelatorio()' style="display: none;" class="custom-file-input inputFile" id="logorelatorio" name="logorelatorio" type="file" value="">
                                            </label>
                                        </form>
                                    </div>

                                    <div class="col-sm-12 col-md-12 text-center">
                                        <h5>Background</h5>
                                        <img id="img-background" style="width:50%;margin:auto" src="" class="m-auto" />
                                        <form enctype="multipart/form-data" id="frm-background" method="post" novalidate="novalidate">
                                            <label for="background" class="inputFile">
                                                <span id="add-background" class="btn btn-default inputFile m-md" style="width: 100%;" aria-hidden="true"><i class="fas fa-upload m-xs"></i> Escolher Arquivo</span>
                                                <input accept="image/*" onchange='Background()' style="display: none;" class="custom-file-input inputFile" id="background" name="background" type="file" value="">
                                            </label>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-white pull-right m-l-sm" data-dismiss="modal">Fechar</button>
                </div>
            </div>
        </div>
    </div>
</div>



@section Styles {

}

@section Scripts {


    <script>
        function CarregarTabelaConfiguracao() {
            const tableConfiguracaoConfig = {
                language: languageConfig,
                lengthMenu: [10, 50, 100],
                colReorder: false,
                serverSide: false,
                deferloading: 0,
                orderCellsTop: true,
                fixedHeader: true,
                filter: true,
                orderMulti: false,
                responsive: true, stateSave: true, stateSaveCallback: stateSaveCallback, stateLoadCallback: stateLoadCallback,
                destroy: true,
                dom: domConfig,
                buttons: getButtonsConfig('Parâmetros'),
                columns: [
                    { data: "Titulo", title: "Título", name: "Nome", autoWidth: true },
                    {
                        data: "Id", title: "Ajustes", name: "Id", orderable: false, width: "20%",
                        "render": function (data, type, row) {
                            return `${GetButton('EditConfiguracao', data, 'cinza', 'fa-edit', 'Editar Informações')}
                                                                                ${GetButton('EditCampos', data, 'cinza', 'fa-th-list', 'Editar Campos')}
                                                                                ${GetButton('EditEquipes', data, 'cinza', 'fa-broom', 'Editar Equipes')}
                                                                                ${GetButton('EditMensagens', data, 'cinza', 'fa-envelope', 'Editar Mensages')}
                                                                                      ${GetButton('EditMidia', data, 'cinza', 'fa-images', 'Editar Mídias')}
                                                                                   ${GetButton('EditIntegracao', data, 'cinza', 'fa-credit-card', 'Editar Integrações de Pagamento')}
                                                                                `;
                        }
                    }
                ],
                order: [
                    [0, "asc"]
                ],
                ajax: {
                    url: '/Configuracao/GetConfiguracoesDatatable',
                    datatype: "json",
                    type: "POST"
                }
            };

            $("#table-configuracao").DataTable(tableConfiguracaoConfig);
        }

        ConfigLocal = {};

        function PostEquipes() {
            $.ajax({
                url: "/Configuracao/PostConfiguracao/",
                datatype: "json",
                type: "POST",
                contentType: `application/json; charset=utf-8`,
                data: JSON.stringify(
                    {
                        ...ConfigLocal,
                        VincularMontagem: $(`#configuracao-vincular:checked`).length > 0,
                        EquipeCirculoId: $(`#configuracao-equipecirculo`).val(),
                        EquipeCaronaId: $(`#configuracao-equipecarona`).val(),
                    }),
                success: function () {
                    $.ajax({
                        url: "/Configuracao/PostEquipes/",
                        datatype: "json",
                        type: "POST",
                        contentType: `application/json; charset=utf-8`,
                        data: JSON.stringify(
                            {
                                id: ConfigLocal.Id,
                                equipes: $(`#configuracao-equipes`).val().map(equipe => { return { EquipeId: equipe, ShowInscricao: $(`#configuracao-equipes-inscricao`).val().length == 0 || $(`#configuracao-equipes-inscricao`).val().find(eq => eq == equipe) != undefined } })

                            }),
                        success: function () {
                            SuccessMesageOperation()
                            $("#modal-equipes").modal("hide");

                        }
                    })
                }
            })

        }

        function PostCampos() {
            $.ajax({
                url: "/Configuracao/PostCampos/",
                datatype: "json",
                type: "POST",
                contentType: `application/json; charset=utf-8`,
                data: JSON.stringify(
                    {
                        id: ConfigLocal.Id,
                        campos: $(`#configuracao-campos`).val().map(campo => { return { CampoId: campo } })

                    }),
                success: function () {
                    $.ajax({
                        url: "/Configuracao/PostCamposEquipe/",
                        datatype: "json",
                        type: "POST",
                        contentType: `application/json; charset=utf-8`,
                        data: JSON.stringify(
                            {
                                id: ConfigLocal.Id,
                                campos: $(`#configuracao-camposequipe`).val().map(campo => { return { CampoId: campo } })

                            }),
                        success: function () {
                            SuccessMesageOperation()
                            $("#modal-campos").modal("hide");
                        }
                    })
                }
            })

        }

        function GetConfiguracao(id) {
            if (id > 0) {
                $.ajax({
                    url: "/Configuracao/GetConfiguracaoEdit/",
                    data: { Id: id },
                    datatype: "json",
                    type: "GET",
                    contentType: 'application/json; charset=utf-8',
                    success: function (dataConfiguracao) {
                        $.ajax({
                            url: "/Igreja/GetIgrejas/",
                            datatype: "json",
                            type: "POST",
                            contentType: `application/json; charset=utf-8`,
                            success: function (dataIgrejas) {
                                igrejas = dataIgrejas.data
                                $(".configuracao-igrejas").html(`${[...igrejas].map(p => `<option value=${p.Id}>${p.Nome}</option>`)}`)

                                $.ajax({
                                    url: "/Configuracao/GetIgrejas/",
                                    data: {
                                        id
                                    },
                                    datatype: "json",
                                    type: "GET",
                                    contentType: `application/json; charset=utf-8`,
                                    success: function (data) {
                                        igrejasLocal = data.Igrejas
                                        $(`#configuracao-igreja`).val(igrejasLocal.map(igreja => igreja.IgrejaId));
                                        $(`#configuracao-igreja`).select2({ ...createTagOptions, dropdownParent: $('#form-configuracao') }).off('select2:select').on('select2:select', function (e) {
                                            if (e.params.data.newTag) {
                                                $.ajax({
                                                    url: "/Igreja/PostIgreja/",
                                                    datatype: "json",
                                                    type: "POST",
                                                    contentType: 'application/json; charset=utf-8',
                                                    data: JSON.stringify(
                                                        {
                                                            Id: null,
                                                            Nome: e.params.data.id,
                                                        }),
                                                    success: function (data) {
                                                        // Append it to the select


                                                        var otherOption = new Option(data.Igreja.Nome, data.Igreja.Id, false, false);
                                                        // Append it to the select
                                                        $(`#configuracao-igreja`).find("option[value='" + e.params.data.id + "']").attr('value', data.Igreja.Id).trigger('change');
                                                    }
                                                });
                                            }

                                        });
                                    }
                                });
                            }
                        })

                        $(`.centro-custos`).html(`${dataConfiguracao.Configuracao.CentroCustos.filter(x => x.Tipo == "Receita").map(p => `<option value=${p.Id}>${p.Descricao}</option>`)}`)
                        $(`#configuracao-centrocustoinscricao`).val(dataConfiguracao.Configuracao.CentroCustoInscricaoId).select2({ ...createTagOptions, dropdownParent: $('#form-configuracao') }).off('select2:select').on('select2:select', function (e) {
                            if (e.params.data.newTag) {
                                $.ajax({
                                    url: "/CentroCusto/PostCentroCusto/",
                                    datatype: "json",
                                    type: "POST",
                                    contentType: 'application/json; charset=utf-8',
                                    data: JSON.stringify(
                                        {
                                            Id: null,
                                            Descricao: e.params.data.id,
                                            Tipo: 1,
                                            ConfiguracaoId: dataConfiguracao.Configuracao.Id
                                        }),
                                    success: function (data) {
                                        // Append it to the select


                                        var otherOption = new Option(data.CentroCusto.Descricao, data.CentroCusto.Id, false, false);
                                        // Append it to the select
                                        $(`#configuracao-centrocustoequipe`).append(otherOption).trigger('change');
                                        $(`#configuracao-centrocustoinscricao`).find("option[value='" + e.params.data.id + "']").attr('value', data.CentroCusto.Id).trigger('change');
                                    }
                                });
                            }

                        });
                        $(`#configuracao-centrocustoequipe`).val(dataConfiguracao.Configuracao.CentroCustoTaxaId).select2({ ...createTagOptions, dropdownParent: $('#form-configuracao') }).off('select2:select').on('select2:select', function (e) {
                            if (e.params.data.newTag) {
                                $.ajax({
                                    url: "/CentroCusto/PostCentroCusto/",
                                    datatype: "json",
                                    type: "POST",
                                    contentType: 'application/json; charset=utf-8',
                                    data: JSON.stringify(
                                        {
                                            Id: null,
                                            Descricao: e.params.data.id,
                                            Tipo: 1,
                                            ConfiguracaoId: dataConfiguracao.Configuracao.Id
                                        }),
                                    success: function (data) {
                                        // Append it to the select


                                        var otherOption = new Option(data.CentroCusto.Descricao, data.CentroCusto.Id, false, false);
                                        // Append it to the select
                                        $(`#configuracao-centrocustoinscricao`).append(otherOption).trigger('change');
                                        $(`#configuracao-centrocustoequipe`).find("option[value='" + e.params.data.id + "']").attr('value', data.CentroCusto.Id).trigger('change');
                                    }
                                });
                            }

                        })

                        $("#configuracao-id").val(dataConfiguracao.Configuracao.Id);
                        $("#configuracao-titulo").val(dataConfiguracao.Configuracao.Titulo);
                        $("#configuracao-identificador").val(dataConfiguracao.Configuracao.Identificador);
                        $("#configuracao-corbotao").val(dataConfiguracao.Configuracao.CorBotao);
                        $(`#configuracao-tipocirculo`).val(dataConfiguracao.Configuracao.TipoCirculoId).select2({ dropdownParent: $('#form-configuracao') })
                        $(`#configuracao-tipoquarto`).val(dataConfiguracao.Configuracao.TipoQuartoId).select2({ dropdownParent: $('#form-configuracao') })
                        $(`#configuracao-tipoevento`).val(dataConfiguracao.Configuracao.TipoEventoId).select2({ dropdownParent: $('#form-configuracao') })
                        ConfigLocal = dataConfiguracao.Configuracao
                    }
                });
            }
            else {
                $.ajax({
                    url: "/Configuracao/PostConfiguracao/",
                    datatype: "json",
                    type: "POST",
                    contentType: `application/json; charset=utf-8`,
                    data: JSON.stringify(
                        {
                            Titulo: ""
                        }),
                    success: function () {
                        SuccessMesageOperation()
                        CarregarTabelaConfiguracao()
                    }
                });
            }
        }

        function EditConfiguracao(id) {

            GetConfiguracao(id);
            $("#modal-configuracao").modal();
        }



        function EditMidia(id) {
            $.ajax({
                url: "/Configuracao/GetConfiguracaoEdit/",
                data: { Id: id },
                datatype: "json",
                type: "GET",
                contentType: 'application/json; charset=utf-8',
                success: function (dataConfiguracao) {
                    ConfigLocal = dataConfiguracao.Configuracao
                    $('#logo').val('')
                    if (ConfigLocal.LogoId) {
                        $(`#img-logo`).css(`display`, `block`)
                        $(`#img-logo`).attr("src", `/Arquivo/GetArquivo/${ConfigLocal.LogoId}`)
                    } else {
                        $(`#img-logo`).css(`display`, `none`)
                    }

                    $('#background').val('')
                    if (ConfigLocal.BackgroundId) {
                        $(`#img-background`).css(`display`, `block`)
                        $(`#img-background`).attr("src", `/Arquivo/GetArquivo/${ConfigLocal.BackgroundId}`)
                    } else {
                        $(`#img-background`).css(`display`, `none`)
                    }

                    $('#logorelatorio').val('')
                    if (ConfigLocal.LogoRelatorioId) {
                        $(`#img-logorelatorio`).css(`display`, `block`)
                        $(`#img-logorelatorio`).attr("src", `/Arquivo/GetArquivo/${ConfigLocal.LogoRelatorioId}`)
                    } else {
                        $(`#img-logorelatorio`).css(`display`, `none`)
                    }
                    $("#modal-midia").modal();
                }
            })
        }

        function Logo() {
            postArquivo(`Logo`)
        }

        function Background() {
            postArquivo(`Background`)
        }

        function LogoRelatorio() {
            postArquivo(`logorelatorio`)
        }


        function postArquivo(tipo) {
            var dataToPost = new FormData($(`#frm-${tipo.toLowerCase()}`)[0]);
            var filename = dataToPost.get(`${tipo.toLowerCase()}`).name

            var arquivo = new File([dataToPost.get(`${tipo.toLowerCase()}`)], tipo + ` Sistema` + filename.substr(filename.indexOf(`.`)));
            dataToPost.set(`Arquivo`, arquivo)
            $.ajax(
                {
                    processData: false,
                    contentType: false,
                    type: "POST",
                    data: dataToPost,
                    url: "/Arquivo/PostArquivo",
                    success: function (data) {
                        $(`#img-${tipo.toLowerCase()}`).attr('src', `/Arquivo/GetArquivo/${data}`)
                        $.ajax(
                            {
                                datatype: "json",
                                type: "POST",
                                contentType: `application/json; charset=utf-8`,
                                url: `/Configuracao/Post${tipo}`,
                                data: `{ Id: ${ConfigLocal.Id}, sourceId: ${data}
                                                                                                                                                                        }`,
                                success: function () {
                                    SuccessMesageOperation()
                                }
                            });
                    }
                });
        }


        function EditIntegracao(id) {

            $.ajax({
                url: "/Configuracao/GetConfiguracaoEdit/",
                data: { Id: id },
                datatype: "json",
                type: "GET",
                contentType: 'application/json; charset=utf-8',
                success: function (dataConfiguracao) {
                    ConfigLocal = dataConfiguracao.Configuracao
                    $(`#configuracao-public`).val(ConfigLocal.PublicTokenMercadoPago)
                    $(`#configuracao-access`).val(ConfigLocal.AccessTokenMercadoPago)
                    $("#modal-integracao").modal();
                }
            })
        }

        function EditMensagens(id) {

            $.ajax({
                url: "/Configuracao/GetConfiguracaoEdit/",
                data: { Id: id },
                datatype: "json",
                type: "GET",
                contentType: 'application/json; charset=utf-8',
                success: function (dataConfiguracao) {
                    ConfigLocal = dataConfiguracao.Configuracao
                    $(`#configuracao-msg`).summernote({
                        height: 300,
                        lang: 'pt-BR',      
                        toolbar: [
                            ['style', ['style','bold', 'italic', 'underline', 'clear']],
                            ['font', ['strikethrough', 'superscript', 'subscript']],
                            ['fontname', ['fontname']],
                            ['fontsize', ['fontsize']],
                            ['color', ['color']],
                            ['para', ['ul', 'ol', 'paragraph']],
                            ['height', ['height']],
                            ['insert', ['link']],
                            ['view', ['codeview']]]
                        ['mybutton', ['Id', 'Nome', 'Apelido', 'Evento', "NumeracaoEvento", "DescricaoEvento", 'Data', 'Valor', 'NomePadrinho', 'FonePadrinho',]], 
                        buttons: {
                            Nome: NomeButton,
                            Apelido: ApelidoButton,
                            Evento: EventoButton,
                            NumeracaoEvento: NumeracaoEventoButton,
                            DescricaoEvento: DescricaoEventoButton,
                            Data: DataButton,
                            Valor: ValorButton,
                            NomePadrinho: PadrinhoNomeButton,
                            FonePadrinho: PadrinhoFoneButton,

                        }
                    }).summernote('code', dataConfiguracao.Configuracao.MsgConclusao)
                    $(`#configuracao-msgequipe`).summernote({
                        height: 300,
                        lang: 'pt-BR',
                        toolbar: [
                            ['style', ['style']],
                            ['font', ['bold', 'italic']],
                            ['fontname', ['fontname']],
                            ['view', ['codeview']],
                            ['mybutton', ['Id', 'Nome', 'Apelido', 'Evento', "NumeracaoEvento", "DescricaoEvento", 'Data', 'Valor']]
                        ],
                        buttons: {
                            Nome: NomeButton,
                            Apelido: ApelidoButton,
                            Evento: EventoButton,
                            NumeracaoEvento: NumeracaoEventoButton,
                            DescricaoEvento: DescricaoEventoButton,
                            Data: DataButton,
                            Valor: ValorButton
                        }
                    }).summernote('code', dataConfiguracao.Configuracao.MsgConclusaoEquipe)
                    $("#modal-mensagens").modal();
                }
            })
        }

        function EditCampos(id) {

            $.ajax({
                url: "/Configuracao/GetConfiguracaoEdit/",
                data: { Id: id },
                datatype: "json",
                type: "GET",
                contentType: 'application/json; charset=utf-8',
                success: function (dataConfiguracao) {
                    ConfigLocal = dataConfiguracao.Configuracao

                    $.ajax({
                        url: "/Configuracao/GetCamposEnum/",
                        datatype: "json",
                        type: "GET",
                        contentType: `application/json; charset=utf-8`,
                        success: function (dataCampos) {
                            camposConfigLocal = dataCampos.Campos
                            $(".configuracao-campos").html(`${[...camposConfig].map(p => `<option value=${p.Id}>${p.Description}</option>`)}`)

                            $.ajax({
                                url: "/Configuracao/GetCampos/",
                                data: {
                                    id
                                },
                                datatype: "json",
                                type: "GET",
                                contentType: `application/json; charset=utf-8`,
                                success: function (data) {
                                    campos = data.Campos
                                    $(`#configuracao-campos`).val(campos.map(campo => campo.CampoId));
                                    $(`#configuracao-campos`).select2({ dropdownParent: $('#form-campos') });
                                }
                            });

                            $.ajax({
                                url: "/Configuracao/GetCamposEquipe/",
                                data: {
                                    id
                                },
                                datatype: "json",
                                type: "GET",
                                contentType: `application/json; charset=utf-8`,
                                success: function (data) {
                                    campos = data.Campos
                                    $(`#configuracao-camposequipe`).val(campos.map(campo => campo.CampoId));
                                    $(`#configuracao-camposequipe`).select2({ dropdownParent: $('#form-campos') });
                                }
                            });
                        }
                    })

                    $("#modal-campos").modal();
                }
            })

        }

        function EditEquipes(id) {

            $.ajax({
                url: "/Configuracao/GetConfiguracaoEdit/",
                data: { Id: id },
                datatype: "json",
                type: "GET",
                contentType: 'application/json; charset=utf-8',
                success: function (dataConfiguracao) {
                    ConfigLocal = dataConfiguracao.Configuracao

                    $.ajax({
                        url: "/Equipe/GetEquipesConfig/",
                        datatype: "json",
                        type: "POST",
                        contentType: `application/json; charset=utf-8`,
                        success: function (dataEquipes) {
                            equipes = dataEquipes.data
                            $(".configuracao-equipes").html(`${[...equipes].map(p => `<option value=${p.Id}>${p.Nome}</option>`)}`)

                            $.ajax({
                                url: "/Configuracao/GetEquipes/",
                                data: {
                                    id
                                },
                                datatype: "json",
                                type: "GET",
                                contentType: `application/json; charset=utf-8`,
                                success: function (data) {
                                    equipesLocal = data.Equipes
                                    $(`#configuracao-equipes`).val(equipesLocal.map(equipe => equipe.EquipeId));
                                    $(`#configuracao-equipes`).select2({ ...createTagOptions, dropdownParent: $('#form-equipes') }).off('select2:select').on('select2:select', function (e) {
                                        if (e.params.data.newTag) {
                                            postEquipe(e.params.data.id)
                                        }
                                    });

                                    $(`#configuracao-equipes-inscricao`).val(equipesLocal.filter(x => x.ShowInscricao).map(equipe => equipe.EquipeId));
                                    $(`#configuracao-equipes-inscricao`).select2({ ...createTagOptions, dropdownParent: $('#form-equipes') }).off('select2:select').on('select2:select', function (e) {
                                        if (e.params.data.newTag) {
                                            postEquipe(e.params.data.id)
                                        }
                                    });

                                    $(`#configuracao-equipecirculo`).val(dataConfiguracao.Configuracao.EquipeCirculoId).select2({ ...createTagOptions, dropdownParent: $('#form-equipes') }).off('select2:select').on('select2:select', function (e) {
                                        if (e.params.data.newTag) {
                                            postEquipe(e.params.data.id)
                                        }
                                    });
                                    $(`#configuracao-equipecarona`).val(dataConfiguracao.Configuracao.EquipeCaronaId).select2({ ...createTagOptions, dropdownParent: $('#form-equipes') }
                                    ).off('select2:select').on('select2:select', function (e) {
                                        if (e.params.data.newTag) {
                                            postEquipe(e.params.data.id)
                                        }
                                    });
                                    $(`#configuracao-vincular`).iCheck(dataConfiguracao.Configuracao.VincularMontagem ? 'check' : "uncheck")
                                    $("#modal-equipes").modal();
                                }
                            });

                        }
                    })






                }
            })

        }

        function postEquipe(Equipe) {
            $.ajax({
                url: "/Equipe/PostEquipe/",
                datatype: "json",
                type: "POST",
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(
                    {
                        Id: null,
                        Nome: Equipe,
                    }),
                success: function (data) {
                    var otherOption = new Option(data.Equipe.Nome, data.Equipe.Id, false, false);
                    // Append it to the select
                    $(`.configuracao-equipes`).append(otherOption).trigger('change');
                    $('.configuracao-equipes').find("option[value='" + Equipe + "']").attr('value', data.Equipe.Id).trigger('change');
                }
            });
        }

        function PostIntegracao() {
            $.ajax({
                url: "/Configuracao/PostConfiguracao/",
                datatype: "json",
                type: "POST",
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(
                    {
                        ...ConfigLocal,
                        PublicTokenMercadoPago: $(`#configuracao-public`).val(),
                        AccessTokenMercadoPago: $(`#configuracao-access`).val(),
                    }),
                success: function () {
                    SuccessMesageOperation();
                    $("#modal-integracao").modal("hide");
                }
            })
        }

        function PostMensagens() {
            $.ajax({
                url: "/Configuracao/PostConfiguracao/",
                datatype: "json",
                type: "POST",
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(
                    {
                        ...ConfigLocal,
                        MsgConclusao: $(`#configuracao-msg`).summernote('code'),
                        MsgConclusaoEquipe: $(`#configuracao-msgequipe`).summernote('code'),
                    }),
                success: function () {
                    SuccessMesageOperation();
                    $("#modal-mensagens").modal("hide");
                }
            })

        }

        function PostConfiguracao() {
            if (ValidateForm(`#form-configuracao`)) {
                $.ajax({
                    url: "/Configuracao/PostConfiguracao/",
                    datatype: "json",
                    type: "POST",
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(
                        {
                            ...ConfigLocal,
                            Titulo: $("#configuracao-titulo").val(),
                            Identificador: $(`#configuracao-identificador`).val(),
                            CorBotao: $(`#configuracao-corbotao`).val(),
                            CentroCustoInscricaoId: $(`#configuracao-centrocustoinscricao`).val(),
                            CentroCustoTaxaId: $(`#configuracao-centrocustoequipe`).val(),
                            TipoCirculoId: $(`#configuracao-tipocirculo`).val(),
                            TipoQuartoId: $(`#configuracao-tipoquarto`).val(),
                            TipoEventoId: $(`#configuracao-tipoevento`).val(),
                        }),
                    success: function () {
                        $.ajax({
                            url: "/Configuracao/PostIgrejas/",
                            datatype: "json",
                            type: "POST",
                            contentType: `application/json; charset=utf-8`,
                            data: JSON.stringify(
                                {
                                    id: ConfigLocal.Id,
                                    igrejas: $(`#configuracao-igreja`).val().map(igreja => { return { IgrejaId: igreja } })

                                }),
                            success: function () {

                                SuccessMesageOperation();
                                CarregarTabelaConfiguracao();
                                $("#modal-configuracao").modal("hide");
                            }, error: function () {
                                ErrorMessage('Você deve selecionar as congregações participantes')
                            }
                        })
                    }
                });
            }
        }

        $(document).off('ready-ajax').on('ready-ajax', () => {
            defaultLogin()
            CarregarTabelaConfiguracao();
        });

    </script>
}

@using Microsoft.AspNet.Identity
@using Utils.Services

<style>
    .menu-user {
        position: relative;
        display: inline-block;
        padding: 10px;
    }

    .menu-notification {
        position: relative;
        display: inline-block;
    }

    .img-avatar:hover {
        opacity: 0.7
    }

    .dropdown-content {
        display: none;
        position: absolute;
        top: 60px;
        right: -10px;
        background-color: #f9f9f9;
        min-width: 200px;
        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
        z-index: 1;
    }

        .dropdown-content ul li.hover-menu {
            width: 100%;
            height: 50px;
        }

            .dropdown-content ul li.hover-menu:hover {
                background-color: #d3d4d5;
            }

        .dropdown-content ul li.hover-menu-notification {
            width: 100%;
            height: 50px;
        }

    .hover-menu-notification, .hover-menu {
        background: #e4e6e9;
    }

    .dropdown-content ul li.hover-menu-notification:hover {
        background-color: #d3d4d5;
    }

    .menu-notification {
        font-size: 20px;
        padding: 20px 10px;
    }

    .navbar-right {
        display: flex;
    }

    .text-muted {
        color: #888888 !important;
        font-size: 10px !important;
    }

    .dropdown-item {
        color: #000000 !important;
        font-size: 11px !important;
    }

    .item-notificacao {
        border-bottom: 1px solid #bdbbbb;
    }

    .label-notificacao {
        font-size: 10px;
        font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;
        font-weight: 600;
        text-shadow: none;
        border-radius: 0.25em;
        white-space: nowrap;
        line-height: 12px;
        padding: 2px 5px;
        position: absolute;
        right: 6px;
        top: 12px;
    }

        .label-notificacao.label-primary {
            background-color: #1ab394;
            color: #FFFFFF;
        }

    .dropdown-toggle {
        white-space: nowrap;
    }

    @@media (max-width: 500px) {
        .menu-user {
            margin-right: 15px !important;
        }
    }
</style>

<div class="row border-bottom">
    <nav class="navbar navbar-static-top white-bg" role="navigation" style="margin-bottom: 0">
        <div class="navbar-header">
            <a class="navbar-minimalize minimalize-styl-2 btn btn-primary " href="#"><i class="fa fa-bars"></i> </a>

        </div>

        @if (Request.IsAuthenticated)
        {
            using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "frm-upload-avatar", @class = "navbar-right" }))
            {
                @Html.AntiForgeryToken()

                <ul class="navbar-right" style="margin-left: auto">               

                    <li class="menu-user" style="margin-right: 40px; display: flex;height:50px">
                        <img class="img-avatar inputFile" style="margin: auto; width: 40px; height: 40px; border-radius: 50%; margin-left: 10px; cursor: pointer " src="~/Images/profile.jpg" />
                        <div class="dropdown-content">
                            <ul class="nav navbar-top-links">

                                <li class="hover-menu">
                                    <a href="#" style="color: #000000;">

                                        @UtilServices.CapitalizarNome(User.Identity.GetUserName())

                                    </a>
                                </li>
                                <li class="hover-menu">
                                    <a>
                                        <label for="user-avatar-arquivo" style="cursor: pointer;width: 100%; color: #000000; font-weight: 600 !important; margin-bottom: 0px; font-size: 12px " class="inputFile">
                                            Mudar Foto
                                            <i style="float: right; padding-right: 5px" class="fas fa-camera"></i>
                                            <input style="display: none;" class="custom-file-input inputFile" id="user-avatar-arquivo" name="user-avatar-arquivo" type="file" value="">
                                        </label>
                                    </a>
                                </li>
                                <li class="hover-menu">
                                    <a onclick="changePass()">
                                        <label for="user-password" style="cursor: pointer;width: 100%; color: #000000; font-weight: 600 !important; margin-bottom: 0px; font-size: 12px ">
                                            Trocar Senha
                                            <i style="float: right; padding-right: 5px" class="fas fa-key"></i>
                                        </label>
                                    </a>
                                </li>
                                <li class="hover-menu">
                                    <a onclick="whatsBot()">
                                        <label for="user-password" style="cursor: pointer;width: 100%; color: #000000; font-weight: 600 !important; margin-bottom: 0px; font-size: 12px ">
                                            Configurar WhatsApp
                                            <i style="float: right; padding-right: 5px" class="fab fa-whatsapp"></i>
                                        </label>
                                    </a>
                                </li>

                                <li class="hover-menu">
                                    <a href="javascript:logoff()">
                                        <label for="user-logout" style="cursor: pointer;width: 100%; color: #000000; font-weight: 600 !important; margin-bottom: 0px; font-size: 12px ">
                                            Sair
                                            <i style="float:right; padding-right: 5px" class="fas fa-sign-out-alt"></i>
                                        </label>
                                    </a>
                                </li>
                            </ul>
                        </div>
                    </li>
                </ul>
            }
        }
    </nav>
</div>


<div class="modal inmodal" id="modal-qr" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content animated bounceInRight">
            <div class="modal-header">
                <h5 class="modal-title">Escaneie o QR Code no app do Whatsapp</h5>
            </div>
            <div class="modal-body">
                <div class="moldura-modal p-h-xs" style="display:flex">
                    <img style="margin:auto;display:none" src="" id="whats-qr" />
                    <div id="loader-qr" class="sk-spinner sk-spinner-chasing-dots">
                        <div class="sk-dot1"></div>
                        <div class="sk-dot2"></div>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-white pull-right m-l-sm" data-dismiss="modal">Fechar</button>
                </div>
            </div>
        </div>
    </div>
</div>




<script>

    const divBase = (tipo, quantidade, valor) => {
        const { titulo, link, icon, onClick } = handleTipo(tipo, quantidade, valor);
        return `
                <li class="hover-menu-notification item-notificacao">
                    <a ${link ? `href="${link}"` : `onclick="${onClick}"`}  class="dropdown-item">
                        <div>
                           ${icon}
                           ${titulo}
                        </div>
                    </a>
                </li>
                `
    }

    function logoff() {
        localStorage.removeItem('UserName')
        localStorage.removeItem('Password')
        document.getElementById('frm-upload-avatar').submit()
    }

    async function handleWhatsappConnected() {
        const token = await $.ajax({
            url: `https://api.sysigreja.com/api/${username}/SysIgrejaToken/generate-token`,
            datatype: "json",
            type: "POST",
        })

        const status_response = await $.ajax({
            url: `https://api.sysigreja.com/api/${token.full}/status-session`,
            datatype: "json",
            type: "GET",
        })

        return {
            token: token.full,
            status: status_response.status,
            qrcode: status_response.qrcode
        }
    }

    async function whatsBot() {
        const status_response = await handleWhatsappConnected()

        if (status_response.status == "CLOSED") {
            await connectWhatsapp(status_response.token)
        } else if (status_response.status == "CONNECTED") {
            $('#modal-qr').modal("hide")
            SuccessMessage("Whatsapp conectado com sucesso!")
        } else if (status_response.status == "QRCODE") {
            handleQRCode(status_response.qrcode)
        } else if (status_response.status == "INITIALIZING") {
           setTimeout(whatsBot,3000)
        }

    }

    async function handleQRCode(qrcode, callback) {

        $('#modal-qr').modal()
        $('#loader-qr').css('display', 'blocked')
        $("#whats-qr").attr('src', qrcode.includes('data') ? qrcode : `data:image/png;base64,${qrcode}` )
        $('#loader-qr').css('display', 'none')
        $("#whats-qr").css('display', 'block')

        const socket = io.connect('https://api.sysigreja.com/');

        socket.on('session-logged', function (session) {
            if (session.session == username) {

                SuccessMessage("Whatsapp conectado com sucesso!")
                $('#modal-qr').modal("hide")
                socket.close()
                if (callback) {
                    callback().then(() => { })
                }
            }

        });
    }

    async function connectWhatsapp(token, callback) {
        $('#modal-qr').modal()
        $('#loader-qr').css('display', 'blocked')
        const start_response = await $.ajax({
            url: `https://api.sysigreja.com/api/${token}/start-session`,
            data: {
                "webhook": "",
                "waitQrCode": true

            },
            datatype: "json",
            type: "POST",
        })

        if (start_response.qrcode && start_response.status != "CLOSED") {
            await handleQRCode(start_response.qrcode, callback)

        } else {
            await whatsBot()
        }

    }

    

</script>

